# .github/workflows/generate-llms-txt.yml
name: Generate LLMS TXT files

on:
  schedule:
    - cron: '0 12 * * *'  # Every day at 12:00 UTC
  workflow_dispatch:

jobs:
  generate-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npx commands to generate files
        run: |
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/sitemap_index.xml \
          --replace-title 's/\| Aurora Solar$//' \
          --description "$(cat <<'EOF'
          The #1 solar software to design and sell advanced PV systems. See why installers use Aurora to create over 100,000 PV designs every week.

          ## Subindexes
          - llms-eu.txt
          - llms-helioscope.txt
          - llms-help.txt
          - llms-docs.txt

          ## Main Properties
          - [Aurora Solar Marketing Website](https://aurorasolar.com): Main marketing website showcasing product features, solutions, and resources.
          - [Aurora Solar Help Center](https://help.aurorasolar.com): Support portal with tutorials, troubleshooting, and product documentation.
          - [Aurora Solar API Documentation](https://docs.aurorasolar.com): Technical documentation for integrating with Aurora's API.
          - [Helioscope Marketing Website](https://helioscope.aurorasolar.com): Solar design and simulation software for professionals.

          ## Localized Marketing Sites
          - [Aurora EU Landing Page](https://aurorasolar.com/eu/): Central hub for Aurora's European content and region-specific offerings.
          - [Aurora Solar France](https://aurorasolar.com/eu/fr/): French-language version of the site with tailored content for France.
          - [Aurora Solar Spain](https://aurorasolar.com/eu/es/): Spanish-language version of the site with tailored content for Spain.
          - [Aurora Solar Germany](https://aurorasolar.com/eu/de/): German-language version of the site with tailored content for Germany.
          EOF
          )" > llms.txt

          # Create a working directory for temp files (optional)
          mkdir -p tmp-llms-eu

          # Generate a txt file for each EU sitemap
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/post-sitemap.xml > tmp-llms-eu/post.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/page-sitemap.xml > tmp-llms-eu/page.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/news-sitemap.xml > tmp-llms-eu/news.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/case_studies-sitemap.xml > tmp-llms-eu/case_studies.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/resources-sitemap.xml > tmp-llms-eu/resources.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/events-sitemap.xml > tmp-llms-eu/events.txt
          npx github:dotenvx/llmstxt gen https://aurorasolar.com/eu/de/author-sitemap.xml > tmp-llms-eu/author.txt
          
          # Concatenate all into final llms-eu.txt
          cat tmp-llms-eu/*.txt > llms-eu.txt
          
          # Step 1: Fetch all articles
          curl -s "https://help.aurorasolar.com/api/v2/help_center/en-us/articles.json?per_page=10000" > help_articles.json
          
          # Step 2: Extract unique section IDs
          jq -r '.articles[].section_id' help_articles.json | sort -u > section_ids.txt
          
          # Step 3: Build a map of section_id to section_name
          declare -A SECTION_NAMES
          
          while read -r section_id; do
            name=$(curl -s "https://help.aurorasolar.com/api/v2/help_center/sections/${section_id}.json" | jq -r '.section.name')
            SECTION_NAMES["$section_id"]="$name"
          done < section_ids.txt
          
          # Step 4: Start building the final markdown file
          echo "## Aurora Solar Help Center Articles" > llms-help.txt
          echo -e "\nGrouped by section.\n" >> llms-help.txt
          
          # Step 5: Generate content per section
          jq -c '.articles[]' help_articles.json | while read -r article; do
            title=$(echo "$article" | jq -r '.title')
            url=$(echo "$article" | jq -r '.html_url')
            sid=$(echo "$article" | jq -r '.section_id')
            sname="${SECTION_NAMES[$sid]}"
            echo "$sname|||$title|||$url"
          done | sort | awk -F '|||' '
          BEGIN { current="" }
          {
            if ($1 != current) {
              current = $1
              if (NR > 1) print ""
              print "### " current
            }
            print "- [" $2 "](" $3 ")"
          }' >> llms-help.txt

          npx github:dotenvx/llmstxt gen https://docs.aurorasolar.com/sitemap.xml > llms-docs.txt
          npx github:dotenvx/llmstxt gen https://helioscope.aurorasolar.com/sitemap_index.xml > llms-helioscope.txt
            
      - name: Upload files to WordPress server via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          scp -i ~/.ssh/id_ed25519 -P ${{ secrets.SSH_PORT }} \
          -o StrictHostKeyChecking=yes \
            llms*.txt ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/www/aurorasolarmulti_703/public/


